question,expected_query,llm_query,llm_executed_query_results,expected_query_results
Encontre o nome de todos os Juniores (nível = JR) que estão matriculados em um curso ministrado por Ivana Teach.,"select A.nomeAluno
from Aluno as A, Curso as C, Professor as P, Matriculado as M
where A.nivel='JR'
and P.nomeProf = 'Ivana Teach'
and C.idProf = P.idProf
and M.nomeCurso = C.nome
and M.nroAluno = A.nroAluno;","  
SELECT DISTINCT a.nomealuno  
FROM aluno a  
JOIN matriculado m ON a.nroaluno = m.nroaluno  
JOIN curso c ON m.nomecurso = c.nome  
JOIN professor p ON c.idprof = p.idprof  
WHERE a.nivel = 'JR'  
  AND p.nomeprof = 'Ivana Teach';  
","Christopher Garcia, Paul Hall","Christopher Garcia, Paul Hall"
Encontre o nome do aluno mais velho que é formado em History ou matriculado em um curso ministrado pelo Ivana Teach.,"select nomeAluno
from Aluno
where formacao = 'History'
or nroAluno in (
select A2.nroALuno
from Aluno as A2, Curso as C, Professor as P, Matriculado as M
where P.nomeProf = 'Ivana Teach'
and C.idProf = P.idProf
and M.nomeCurso = C.nome
and M.nroAluno = A2.nroAluno)
and idade >= all (
select A1.idade
from Aluno as A1
where A1.formacao = 'History' or
 A1.nroAluno in (
select A2.nroALuno
from Aluno as A2, Curso as C, Professor as P, Matriculado as M
where P.nomeProf = 'Ivana Teach'
and C.idProf = P.idProf
and M.nomeCurso = C.nome
and M.nroAluno = A2.nroAluno));","SELECT a.nomealuno
FROM aluno a
WHERE a.formacao = 'História'
   OR EXISTS (
       SELECT 1
       FROM matriculado m
       JOIN curso c ON m.nomecurso = c.nome
       JOIN professor p ON c.idprof = p.idprof
       WHERE m.nroaluno = a.nroaluno
         AND p.nomeprof = 'Ivana Teach'
   )
ORDER BY a.idade DESC
LIMIT 1;",Christopher Garcia,"Christopher Garcia, Angela Martinez"
Encontre os nomes de todos os cursos que são ministrados na sala R128 ou que têm 3 ou mais alunos matriculados.,"select nome
from Curso as C
where sala = 'R128' or
(select count(distinct nroAluno)
 from Matriculado where nomeCurso = C.nome) >= 3;","  
SELECT nome AS course_name  
FROM curso  
WHERE sala = 'R128'  
UNION  
SELECT nomecurso AS course_name  
FROM matriculado  
GROUP BY nomecurso  
HAVING COUNT(nroaluno) >= 3;  
","Operating System Design, Data Structures, Database Systems, Dairy Herd Management, Intoduction to Math, Patent Law, Archaeology of the Incas","Data Structures, Database Systems, Operating System Design, Archaeology of the Incas, Patent Law, Dairy Herd Management, Intoduction to Math"
Encontre os nomes de todos os alunos que estão matriculados em dois cursos que são ministrados no mesmo horário.,"select nomeAluno
from Aluno
where nroAluno in
(select M1.nroAluno
from Matriculado as M1, Matriculado as M2, Curso as C1, Curso as C2
where M1.nroAluno = M2.nroAluno
and M1.nomeCurso <> M2.nomeCurso
and M1.nomeCurso = C1.nome
and M2.nomeCurso = C2.nome
and C1.horario = C2.horario);","  
SELECT DISTINCT a.nomealuno  
FROM aluno a  
JOIN matriculado m1 ON a.nroaluno = m1.nroaluno  
JOIN curso c1 ON m1.nomecurso = c1.nome  
JOIN matriculado m2 ON a.nroaluno = m2.nroaluno  
JOIN curso c2 ON m2.nomecurso = c2.nome  
WHERE c1.horario = c2.horario  
  AND c1.nome <> c2.nome;  
",Luis Hernandez,Luis Hernandez
Encontre os nomes dos professores para os quais a quantidade de alunos na lista de matriculados de ao menos um dos cursos que eles ministram é menor do que 2.,"select nomeProf
from professor as P, curso as C
where P.idProf = C.idProf and
(select count(nroAluno) from Matriculado
where C.nome = nomeCurso) < 2;","  
SELECT p.nomeprof  
FROM professor p  
JOIN curso c ON p.idprof = c.idprof  
LEFT JOIN matriculado m ON c.nome = m.nomecurso  
GROUP BY p.idprof, p.nomeprof  
HAVING COUNT(DISTINCT m.nroaluno) < 2;  
","John Williams, Elizabeth Taylor, Mary Johnson, William Moore, Barbara Wilson, Patricia Jones, Robert Brown, Jennifer Thomas","Linda Davis, Barbara Wilson, John Williams, John Williams, Barbara Wilson, Jennifer Thomas, William Moore, Richard Jackson, Elizabeth Taylor, Elizabeth Taylor, Richard Jackson, Richard Jackson, Richard Jackson, Richard Jackson, John Williams, Robert Brown, Mary Johnson, Patricia Jones, Richard Jackson"
"Para cada valor de nível que aparece em Aluno, imprima o nível e idade média dos alunos desse nível.","select nivel, avg(idade) as idadeMedia
from aluno group by nivel;","SELECT nivel, AVG(idade) AS avg_age FROM aluno GROUP BY nivel;","[('JR', Decimal('19.5000000000000000')), ('SR', Decimal('20.7142857142857143')), ('FR', Decimal('17.6666666666666667')), ('SO', Decimal('18.4000000000000000'))]",Failed
"Para cada valor de nível que aparece em Aluno exceto JR, imprima o nível e idade média dos alunos desse nível.","select nivel, avg(idade) as idadeMedia
from aluno group by nivel having nivel <> 'JR';","SELECT nivel, AVG(idade) AS average_age  
FROM aluno  
WHERE nivel <> 'JR'  
GROUP BY nivel;","[('SR', Decimal('20.7142857142857143')), ('FR', Decimal('17.6666666666666667')), ('SO', Decimal('18.4000000000000000'))]",Failed
"Para cada professor que ministra cursos apenas na sala R128, imprima seu nome e o número total de cursos que ele ou ela ministra.","select nomeProf, numeroCursos
from professor natural join
(select idProf, count(*) as numeroCursos from curso
 where idProf not in (select idProf from curso where sala <> 'R128')
 group by idProf) as C;","SELECT p.nomeprof, COUNT(*) AS total_cursos  
FROM professor p  
JOIN curso c ON p.idprof = c.idprof  
GROUP BY p.nomeprof  
HAVING MIN(c.sala) = 'R128' AND MAX(c.sala) = 'R128';","[('Robert Brown', 1)]",Failed
Encontre os nomes dos alunos matriculados no número máximo de cursos.,"select nomeAluno from Aluno where nroAluno in
(select nroAluno from Matriculado group by nroAluno
 having count(*) >= all
 (select count(nomeCurso) from Matriculado group by nroAluno));","
WITH course_counts AS (
    SELECT nroaluno, COUNT(nomecurso) AS total_courses
    FROM matriculado
    GROUP BY nroaluno
),
max_count AS (
    SELECT MAX(total_courses) AS max_courses
    FROM course_counts
)
SELECT a.nomealuno
FROM aluno a
JOIN course_counts cc ON a.nroaluno = cc.nroaluno
JOIN max_count m ON cc.total_courses = m.max_courses;
","Ana Lopez, Juan Rodriguez","Ana Lopez, Juan Rodriguez"
Encontre os nomes dos alunos matriculados em nenhum curso.,"select nomeAluno
from Aluno
where nroAluno not in
(select nroAluno
from Matriculado);","  
SELECT a.nomealuno  
FROM aluno a  
LEFT JOIN matriculado m ON a.nroaluno = m.nroaluno  
WHERE m.nroaluno IS NULL;  
","Maria White, Charles Harris, Angela Martinez, Thomas Robinson, Margaret Clark, Dorthy Lewis, Daniel Lee, Nancy Allen, Mark Young, Donald King, George Wright, Steven Green, Edward Baker","Maria White, Charles Harris, Angela Martinez, Thomas Robinson, Margaret Clark, Dorthy Lewis, Daniel Lee, Nancy Allen, Mark Young, Donald King, George Wright, Steven Green, Edward Baker"
"Para cada valor de idade que aparece em Aluno, encontre o valor do nível que aparece com mais frequência. Por exemplo, se houver mais alunos no nível FR com idade 18 do que os alunos com idade 18 dos níveis SR, JR ou SO, você deve imprimir o par (18,FR).","select idade, nivel from Aluno as A group by idade, nivel
having count(nivel) >= all
(select count(*) from Aluno where idade = A.idade group by nivel);","  
WITH level_counts AS (  
    SELECT  
        idade,  
        nivel,  
        COUNT(*) AS cnt,  
        ROW_NUMBER() OVER (PARTITION BY idade ORDER BY COUNT(*) DESC) AS rn  
    FROM aluno  
    GROUP BY idade, nivel  
)  
SELECT idade, nivel  
FROM level_counts  
WHERE rn = 1  
ORDER BY idade;  
","[(Decimal('17'), 'FR'), (Decimal('18'), 'FR'), (Decimal('19'), 'SO'), (Decimal('20'), 'JR'), (Decimal('21'), 'SR'), (Decimal('22'), 'SR')]",Failed
