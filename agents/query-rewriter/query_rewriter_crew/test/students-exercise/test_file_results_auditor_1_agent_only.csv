question,expected_query,llm_query,llm_executed_query_results,expected_query_results,expected_query_raw_results,auditor_answer,auditor_query_results_answer
Encontre o nome de todos os Juniores (nível = JR) que estão matriculados em um curso ministrado por Ivana Teach.,"select A.nomeAluno from Aluno as A, Curso as C, Professor as P, Matriculado as M where A.nivel='JR' and P.nomeProf = 'Ivana Teach' and C.idProf = P.idProf and M.nomeCurso = C.nome and M.nroAluno = A.nroAluno;", SELECT DISTINCT a.nomealuno FROM aluno a JOIN matriculado m ON a.nroaluno = m.nroaluno JOIN curso c ON m.nomecurso = c.nome JOIN professor p ON c.idprof = p.idprof WHERE a.nivel = 'JR'   AND p.nomeprof = 'Ivana Teach'; ,"Christopher Garcia, Paul Hall","Christopher Garcia, Paul Hall","[('Christopher Garcia',), ('Paul Hall',)]",true,true
Encontre o nome do aluno mais velho que é formado em History ou matriculado em um curso ministrado pelo Ivana Teach.,"select nomeAluno from Aluno where formacao = 'History' or nroAluno in ( select A2.nroALuno from Aluno as A2, Curso as C, Professor as P, Matriculado as M where P.nomeProf = 'Ivana Teach' and C.idProf = P.idProf and M.nomeCurso = C.nome and M.nroAluno = A2.nroAluno) and idade >= all ( select A1.idade from Aluno as A1 where A1.formacao = 'History' or  A1.nroAluno in ( select A2.nroALuno from Aluno as A2, Curso as C, Professor as P, Matriculado as M where P.nomeProf = 'Ivana Teach' and C.idProf = P.idProf and M.nomeCurso = C.nome and M.nroAluno = A2.nroAluno));", SELECT a.nomealuno FROM aluno a WHERE a.formacao = 'History'    OR a.nroaluno IN (        SELECT m.nroaluno        FROM matriculado m        JOIN curso c ON m.nomecurso = c.nome        JOIN professor p ON c.idprof = p.idprof        WHERE p.nomeprof = 'Ivana Teach'    ) ORDER BY a.idade DESC LIMIT 1; ,Christopher Garcia,"Christopher Garcia, Angela Martinez","[('Christopher Garcia',)]",true,false
Encontre os nomes de todos os cursos que são ministrados na sala R128 ou que têm 3 ou mais alunos matriculados.,select nome from Curso as C where sala = 'R128' or (select count(distinct nroAluno)  from Matriculado where nomeCurso = C.nome) >= 3;," SELECT c.nome FROM curso c LEFT JOIN matriculado m ON c.nome = m.nomecurso GROUP BY c.nome, c.sala HAVING c.sala = 'R128' OR COUNT(m.nroaluno) >= 3; ","Operating System Design, Database Systems, Dairy Herd Management, Data Structures, Patent Law, Intoduction to Math, Archaeology of the Incas","Data Structures, Database Systems, Operating System Design, Archaeology of the Incas, Patent Law, Dairy Herd Management, Intoduction to Math","[('Operating System Design',), ('Database Systems',), ('Dairy Herd Management',), ('Data Structures',), ('Patent Law',), ('Intoduction to Math',), ('Archaeology of the Incas',)]",false,true
Encontre os nomes de todos os alunos que estão matriculados em dois cursos que são ministrados no mesmo horário.,"select nomeAluno from Aluno where nroAluno in (select M1.nroAluno from Matriculado as M1, Matriculado as M2, Curso as C1, Curso as C2 where M1.nroAluno = M2.nroAluno and M1.nomeCurso <> M2.nomeCurso and M1.nomeCurso = C1.nome and M2.nomeCurso = C2.nome and C1.horario = C2.horario);", SELECT DISTINCT a.nomealuno FROM matriculado m1 JOIN matriculado m2 ON m1.nroaluno = m2.nroaluno AND m1.nomecurso < m2.nomecurso JOIN curso c1 ON m1.nomecurso = c1.nome JOIN curso c2 ON m2.nomecurso = c2.nome JOIN aluno a ON m1.nroaluno = a.nroaluno WHERE c1.horario = c2.horario; ,Luis Hernandez,Luis Hernandez,"[('Luis Hernandez',)]",true,true
Encontre os nomes dos professores para os quais a quantidade de alunos na lista de matriculados de ao menos um dos cursos que eles ministram é menor do que 2.,"select nomeProf from professor as P, curso as C where P.idProf = C.idProf and (select count(nroAluno) from Matriculado where C.nome = nomeCurso) < 2;", SELECT DISTINCT p.nomeprof FROM professor p WHERE EXISTS (     SELECT 1     FROM curso c     LEFT JOIN matriculado m ON c.nome = m.nomecurso     WHERE c.idprof = p.idprof     GROUP BY c.nome     HAVING COUNT(m.nroaluno) < 2 ); ,"Barbara Wilson, Elizabeth Taylor, Jennifer Thomas, John Williams, Linda Davis, Mary Johnson, Patricia Jones, Richard Jackson, Robert Brown, William Moore","Linda Davis, Barbara Wilson, John Williams, John Williams, Barbara Wilson, Jennifer Thomas, William Moore, Richard Jackson, Elizabeth Taylor, Elizabeth Taylor, Richard Jackson, Richard Jackson, Richard Jackson, Richard Jackson, John Williams, Robert Brown, Mary Johnson, Patricia Jones, Richard Jackson","[('Barbara Wilson',), ('Elizabeth Taylor',), ('Jennifer Thomas',), ('John Williams',), ('Linda Davis',), ('Mary Johnson',), ('Patricia Jones',), ('Richard Jackson',), ('Robert Brown',), ('William Moore',)]",true,false
"Para cada valor de nível que aparece em Aluno, imprima o nível e idade média dos alunos desse nível.","select nivel, avg(idade) as idadeMedia from aluno group by nivel;"," SELECT nivel,        AVG(idade) AS idade_media FROM aluno GROUP BY nivel; ","[('JR', Decimal('19.5000000000000000')), ('SR', Decimal('20.7142857142857143')), ('FR', Decimal('17.6666666666666667')), ('SO', Decimal('18.4000000000000000'))]",Failed,"[('JR', Decimal('19.5000000000000000')), ('SR', Decimal('20.7142857142857143')), ('FR', Decimal('17.6666666666666667')), ('SO', Decimal('18.4000000000000000'))]",true,false
"Para cada valor de nível que aparece em Aluno exceto JR, imprima o nível e idade média dos alunos desse nível.","select nivel, avg(idade) as idadeMedia from aluno group by nivel having nivel <> 'JR';","SELECT nivel, AVG(idade) AS media_idade FROM aluno WHERE nivel <> 'JR' GROUP BY nivel;","[('SR', Decimal('20.7142857142857143')), ('FR', Decimal('17.6666666666666667')), ('SO', Decimal('18.4000000000000000'))]",Failed,"[('SR', Decimal('20.7142857142857143')), ('FR', Decimal('17.6666666666666667')), ('SO', Decimal('18.4000000000000000'))]",false,false
"Para cada professor que ministra cursos apenas na sala R128, imprima seu nome e o número total de cursos que ele ou ela ministra.","select nomeProf, numeroCursos from professor natural join (select idProf, count(*) as numeroCursos from curso  where idProf not in (select idProf from curso where sala <> 'R128')  group by idProf) as C;"," SELECT p.nomeprof, COUNT(*) AS total_courses FROM professor p JOIN curso c ON p.idprof = c.idprof GROUP BY p.nomeprof HAVING COUNT(CASE WHEN c.sala <> 'R128' THEN 1 END) = 0; ","[('Robert Brown', 1)]",Failed,"[('Robert Brown', 1)]",true,false
Encontre os nomes dos alunos matriculados no número máximo de cursos.,select nomeAluno from Aluno where nroAluno in (select nroAluno from Matriculado group by nroAluno  having count(*) >= all  (select count(nomeCurso) from Matriculado group by nroAluno));," WITH course_counts AS (     SELECT m.nroaluno, COUNT(m.nomecurso) AS total_courses     FROM matriculado m     GROUP BY m.nroaluno ), max_course AS (     SELECT MAX(total_courses) AS max_courses     FROM course_counts ) SELECT a.nomealuno FROM aluno a JOIN course_counts cc ON a.nroaluno = cc.nroaluno JOIN max_course mc ON cc.total_courses = mc.max_courses; ","Ana Lopez, Juan Rodriguez","Ana Lopez, Juan Rodriguez","[('Ana Lopez',), ('Juan Rodriguez',)]",true,true
Encontre os nomes dos alunos matriculados em nenhum curso.,select nomeAluno from Aluno where nroAluno not in (select nroAluno from Matriculado);,SELECT a.nomealuno FROM aluno a LEFT JOIN matriculado m ON a.nroaluno = m.nroaluno WHERE m.nroaluno IS NULL;,"Maria White, Charles Harris, Angela Martinez, Thomas Robinson, Margaret Clark, Dorthy Lewis, Daniel Lee, Nancy Allen, Mark Young, Donald King, George Wright, Steven Green, Edward Baker","Maria White, Charles Harris, Angela Martinez, Thomas Robinson, Margaret Clark, Dorthy Lewis, Daniel Lee, Nancy Allen, Mark Young, Donald King, George Wright, Steven Green, Edward Baker","[('Maria White',), ('Charles Harris',), ('Angela Martinez',), ('Thomas Robinson',), ('Margaret Clark',), ('Dorthy Lewis',), ('Daniel Lee',), ('Nancy Allen',), ('Mark Young',), ('Donald King',), ('George Wright',), ('Steven Green',), ('Edward Baker',)]",true,true
"Para cada valor de idade que aparece em Aluno, encontre o valor do nível que aparece com mais frequência. Por exemplo, se houver mais alunos no nível FR com idade 18 do que os alunos com idade 18 dos níveis SR, JR ou SO, você deve imprimir o par (18,FR).","select idade, nivel from Aluno as A group by idade, nivel having count(nivel) >= all (select count(*) from Aluno where idade = A.idade group by nivel);"," WITH frequency AS (     SELECT          idade,          nivel,          COUNT(*) AS freq     FROM aluno     GROUP BY idade, nivel ), ranked AS (     SELECT          idade,          nivel,          freq,         ROW_NUMBER() OVER (PARTITION BY idade ORDER BY freq DESC) AS rn     FROM frequency ) SELECT      idade,      nivel FROM ranked WHERE rn = 1; ","[(Decimal('17'), 'FR'), (Decimal('18'), 'FR'), (Decimal('19'), 'SO'), (Decimal('20'), 'JR'), (Decimal('21'), 'SR'), (Decimal('22'), 'SR')]",Failed,"[(Decimal('17'), 'FR'), (Decimal('18'), 'FR'), (Decimal('19'), 'SO'), (Decimal('20'), 'JR'), (Decimal('21'), 'SR'), (Decimal('22'), 'SR')]",false,false
